# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 1

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
#    - go generate ./...

git:
  tag_sort: -version:creatordate
  prerelease_suffix: "-"


builds:
  - id: "cli"
    binary: "bin/"
    main: "main.go"

    flags:
      - -v

    ldflags:
      - -X " github.com/CoopHive/hive/config.version={{.Version}}"
      - -X "github.com/CoopHive/hive/config.commitSha={{.Commit}}"
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      #      - arm
      - arm64
    ignore:
      - goos: windows
        goarch: arm64

    dir: "." #go.mod

archives:
  - format: binary
    #  - format: tar.gz
    #    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}-
      {{- title .Os }}-
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

release:
  mode: append
  draft: true
  replace_existing_draft: true
  #  make_latest: true
  prerelease: auto #if rc1

#https://goreleaser.com/customization/release/#github
