name: Hardhat Build

on:
  push:
    tags:

    branches:
      - main

    paths:
      - hardhat/**

  pull_request:
    paths:
      - hardhat/**

  workflow_dispatch:


env:
  envfile: ${{secrets.ENV}}

jobs:
  hardhat-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./hardhat

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8.6.6

      - uses: actions/setup-node@v3
        with:
          cache: "pnpm"
          cache-dependency-path: "./hardhat/pnpm-lock.yaml"
          node-version: "20.9.0"
          check-latest: true

      - name: Write environment
        run: |
          echo $envfile > .env
          sed -i 's/ /\n/g' .env
          source .env

      - name: Install dependencies
        run: pnpm install

      - name: Compile contracts
        run: npx hardhat compile


  generate-go-bindings:
    runs-on: ubuntu-latest
    needs: [ hardhat-build ]
    concurrency:
      group: git-commit-${{ github.ref }}
      cancel-in-progress: false

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
          ref: ${{ github.head_ref }}
          persist-credentials: true

      #      - uses: dorny/paths-filter@v3
      #        id: changes
      #        with:
      #          filters: |
      #            src:
      #              - 'hardhat/*.sol'
      #
      #        # run only if some file in 'src' folder was changed
      #
      #      - if: steps.changes.outputs.src == 'false'
      #        run: |
      #          exit 0
      #
      - uses: pnpm/action-setup@v3
        with:
          version: 8.6.6

      - uses: actions/setup-node@v3
        with:
          cache: "pnpm"
          cache-dependency-path: "./hardhat/pnpm-lock.yaml"
          node-version: "20.9.0"
          check-latest: true

      - name: Write environment
        run: |
          echo $envfile > .env
          sed -i 's/ /\n/g' .env
          source .env

      - name: Install dependencies
        working-directory: hardhat
        run: pnpm install

      - name: Compile contracts
        working-directory: hardhat
        run: npx hardhat compile

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          check-latest: true
          cache-dependency-path: go.sum
          cache: true
          go-version-file: go.mod

      - name: Setup
        working-directory: ${{github.workspace}}
        run: make setup-dev

      - name: Go Generate
        run: go generate ./...

      - name: Generate go bindings
        run: |
          chmod +x stack
          ./stack go-bindings

      - name: Git config
        run: |
          git config --global user.name Hiro
          git config --global user.email laciferin@gmail.com


      - name: Commit Push
        id: auto-commit
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "CI: Sync go bindings"
          commit_options: '--no-verify --signoff'


      - name: "Run if changes have been detected"
        if: steps.auto-commit.outputs.changes_detected == 'true'
        run: echo "Changes!"

      - name: "Run if no changes have been detected"
        if: steps.auto-commit.outputs.changes_detected == 'false'
        run: echo "No Changes!"