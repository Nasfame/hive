version: "3.8"

services:
  #  jc:
  #    image: ghcr.io/coophive/hive:latest
  #    command: [ "jc" ]
  #    restart: always
  #    healthcheck:
  #      test: [ "CMD", "./bin/hive", "jc", "--help" ]
  #      interval: 10s
  #      timeout: 5s
  #      retries: 3
  #      start_period: 10s
  #    volumes:
  #      - ./data:/app/coophive

  #  mediator:
  #    env_file:
  #      - .env
  #    image: ghcr.io/coophive/hive:latest
  #    command: [ "mediator" ]
  #    restart: always
  #    healthcheck:
  #      test: [ "CMD", "./bin/hive", "mediator", "--help" ]
  #      interval: 10s
  #      timeout: 5s
  #      retries: 3
  #      start_period: 10s
  #    volumes:
  #      - ./data:/app/coophive

  rp:
    env_file:
      - ~/.bacalhau/bacalhau.run
    image: ghcr.io/coophive/hive:latest
    command: [ "rp" ]
    restart: always
    healthcheck:
      test: [ "CMD", "./bin/hive", "rp", "--help" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    volumes:
      - ./data:/app/coophive

  #  run:
  #    image: ghcr.io/coophive/hive:latest
  #    command: [ "run" ]
  #    restart: always
  #    healthcheck:
  #      test: [ "CMD", "./bin/hive", "run", "--help" ]
  #      interval: 10s
  #      timeout: 5s
  #      retries: 3
  #      start_period: 10s
  #    volumes:
  #      - ./data:/app/coophive

  solver:
    image: ghcr.io/coophive/hive:latest
    command: [ "solver" ]
    restart: always
    healthcheck:
      test: [ "CMD", "./bin/hive", "solver", "--help" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    volumes:
      - ./data:/app/coophive

  hive:
    &hive_defaults
    image: alpine:latest
    command: [ "/bin/hive" ]
    volumes:
      - ./hive:/bin/hive

  hive-solver:
    <<: *hive_defaults
    restart: always
    ports:
      - ${SERVER_PORT:-9080}:${SERVER_PORT:-9080}
    command: [ "/bin/hive", "solver" ]
    healthcheck:
      test: [ 'CMD', 'curl', '--fail', 'http://localhost:${SERVER_PORT:-9080}/api/v1/deals' ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  hive-solver-sepolia:
    env_file:
      - .env.sepolia
    extends:
      service: hive-solver

  hive-rp:
    <<: *hive_defaults
    env_file:
      - .env.sepolia
    command: [ "/bin/hive", "rp" ]

  hive-rp-sepolia:
    env_file:
      - .env.sepolia
    extends:
      service: hive-rp




  aurora:
    extends:
      file: ./docker-compose.faucet.yml
      service: aurora

  sepolia:
    extends:
      file: ./docker-compose.faucet.yml
      service: sepolia


#  version:
#    image: ghcr.io/coophive/hive:latest
#    command: [ "version" ]
#    restart: always
#    healthcheck:
#      test: [ "CMD", "./bin/hive", "version" ]
#      interval: 10s
#      timeout: 5s
#      retries: 3
#      start_period: 10s
#    volumes:
#      - ./data:/app/coophive
