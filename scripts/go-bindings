#!/usr/bin/bash

echo "start go bindings"


function go-binding() {
  local name="$1"
  local pkg="$2"

  # compile the sol files into bytecode and ABI
  cd hardhat
  solc \
    --base-path . \
    --include-path node_modules \
    --overwrite \
    --abi --bin \
    "contracts/$name.sol" \
    -o artifacts


#  sudo chown -R $USER:$USER hardhat/artifacts
  mkdir -p artifacts/bindings/$pkg

  # generate the go bindings
  abigen \
    "--bin=artifacts/$name.bin" \
    "--abi=artifacts/$name.abi" \
    "--pkg=$pkg" "--out=artifacts/bindings/$pkg/$pkg.go"

  cd ..

#  sudo chown -R $USER:$USER hardhat/artifacts/bindings/$pkg
#  sudo chmod 0644 hardhat/artifacts/bindings/$pkg/$pkg.go
  cp -r hardhat/artifacts/bindings/$pkg pkg/web3/bindings/$pkg

  echo "Generated go binding hardhat/artifacts/bindings/$pkg/$pkg.go"
}

function go-bindings() {
  # check if the hive-solc image exists
  # and only build it if it doesn't
  if ! command -v solc &>/dev/null; then
      echo "Error: solc executable not found. try running make"
      exit 1
  fi

  if ! command -v abigen &>/dev/null; then
      echo "Error: abigen executable not found. try running make"
      exit 1
  fi

  rm -rf pkg/web3/bindings
  mkdir -p pkg/web3/bindings
  go-binding HiveToken token
  go-binding HivePayments payments
  go-binding HiveStorage storage
  go-binding HiveUsers users
  go-binding HiveMediationRandom mediation
  go-binding HiveOnChainJobCreator jobcreator
  go-binding HiveController controller

  echo "Generated all go bindings pkg/contract/bindings/"
}

function go-binding-docker() {
  local name="$1"
  local pkg="$2"

  # compile the sol files into bytecode and ABI
  docker run --rm \
    -v $DIR/hardhat:/src \
    -w /src \
    --entrypoint solc \
    coophive-solc \
       --base-path . \
       --include-path node_modules \
       --overwrite \
      --abi --bin \
      "contracts/$name.sol" \
      -o artifacts

  sudo chown -R $USER:$USER hardhat/artifacts
  mkdir -p hardhat/artifacts/bindings/$pkg

  # generate the go bindings
  docker run --rm \
    -v $DIR/hardhat:/src \
    -w /src \
    --entrypoint abigen \
    coophive-solc \
      "--bin=artifacts/$name.bin" \
      "--abi=artifacts/$name.abi" \
      "--pkg=$pkg" "--out=artifacts/bindings/$pkg/$pkg.go"

  sudo chown -R $USER:$USER hardhat/artifacts/bindings/$pkg
  sudo chmod 0644 hardhat/artifacts/bindings/$pkg/$pkg.go
  cp -r hardhat/artifacts/bindings/$pkg pkg/web3/bindings/$pkg

  echo "Generated go binding hardhat/artifacts/bindings/$pkg/$pkg.go"
}


function go-bindings-docker() {
  # check if the hive-solc image exists
  # and only build it if it doesn't

  if [[ -z $(docker images -q coophive-solc) ]]; then
    docker build -t coophive-solc hardhat/solc
  fi
  rm -rf pkg/web3/bindings
  mkdir -p pkg/web3/bindings
  go-binding-docker HiveToken token
  go-binding-docker HivePayments payments
  go-binding-docker HiveStorage storage
  go-binding-docker HiveUsers users
  go-binding-docker HiveMediationRandom mediation
  go-binding-docker HiveOnChainJobCreator jobcreator
  go-binding-docker HiveController controller

  echo "Generated all go bindings pkg/contract/bindings/"
}

if [ "$#" -eq 0 ]; then
    # If no arguments are passed, execute go-bindings
    if ! go-bindings; then
        echo "Error: Failed to execute go-bindings. Try running '$0 docker' instead."
        exit 1
    fi
elif [ "$#" -gt 1 ]; then
    # If more than one argument is passed, exit with code 2 and provide usage
    echo "Usage: $0 [optional pass docker to generate using docker]"
    exit 2
else
    # If only one argument is passed, execute go-bindings with the provided argument
    eval "go-bindings-$1"
fi